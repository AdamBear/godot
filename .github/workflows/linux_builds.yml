name: üêß Linux Builds
on: [push, pull_request]

# Global Settings
env:
  # Only used for the cache key. Increment version to force clean build.
  GODOT_BASE_BRANCH: master-v2
  SCONSFLAGS: verbose=yes warnings=extra werror=yes module_text_server_fb_enabled=yes

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-linux
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: "ubuntu-20.04"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor w/ Mono (target=release_debug, tools=yes, tests=yes)
            cache-name: linux-editor-mono
            target: release_debug
            tools: true
            tests: false # Disabled due freeze caused by mix Mono build and CI
            sconsflags: module_mono_enabled=yes mono_static=yes mono_glue=no
            doc-test: true
            bin: "./bin/godot.linuxbsd.opt.tools.64.mono"
            build-mono: true
            artifact: true

          - name: Editor with doubles and sanitizers (target=debug, tools=yes, float=64, tests=yes, use_asan=yes, use_ubsan=yes)
            cache-name: linux-editor-double-sanitizers
            target: debug
            tools: true
            tests: true
            sconsflags: float=64 use_asan=yes use_ubsan=yes
            proj-test: true
            # Can be turned off for PRs that intentionally break compat with godot-cpp,
            # until both the upstream PR and the matching godot-cpp changes are merged.
            godot-cpp-test: true
            bin: "./bin/godot.linuxbsd.double.tools.64.san"
            build-mono: false
            # Skip 2GiB artifact speeding up action.
            artifact: false

          - name: Template w/ Mono (target=release, tools=no)
            cache-name: linux-template-mono
            target: release
            tools: false
            tests: false
            sconsflags: module_mono_enabled=yes mono_static=yes mono_glue=no debug_symbols=no
            build-mono: false
            artifact: true

          - name: Minimal Template (target=release, tools=no, everything disabled)
            cache-name: linux-template-minimal
            target: release
            tools: false
            tests: false
            sconsflags: modules_enabled_by_default=no disable_3d=yes disable_advanced_gui=yes deprecated=no minizip=no
            artifact: true

    steps:
      - uses: actions/checkout@v2

      - name: Linux dependencies
        shell: bash
        run: |
          # Azure repositories are not reliable, we need to prevent azure giving us packages.
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update
          # The actual dependencies
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
              libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev \
              libdbus-1-dev libudev-dev libxi-dev libxrandr-dev yasm xvfb wget unzip

      # Install elixir dev
      - name: Configure dependencies
        run: |
          sudo apt-get install elixir erlang-dev

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: linuxbsd
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}
          tests: ${{ matrix.tests }}

      - name: Generate Mono glue
        if: ${{ matrix.build-mono }}
        run: |
          ${{ matrix.bin }} --headless --generate-mono-glue modules/mono/glue || true

      # Rebuild with mono
      - name: Compilation (mono_glue=yes)
        uses: ./.github/actions/godot-build
        if: ${{ matrix.build-mono }}
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} mono_glue=yes
          platform: linuxbsd
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}
          
      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          mix local.hex --force
          mix deps.get
          mix compile
          ls -l bin/

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: bin/*
          retention-days: 14
